version: "3.8"

services:
  nginx:
    build: #usually we would specify an image name but in this case the nginx service was created with his own dockerfile
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 9000:80
    volumes:
      - ./../src:/var/www/html
    depends_on:
      - php
    networks:
      - office
  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        DOCKER_GID: 1
    volumes:
      - ./../src:/var/www/html
    depends_on:
      - mysql
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - office

  mysql:
    build:
      context: .
      dockerfile: mysql.dockerfile
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - office

  redis:
    build:
      context: .
      dockerfile: redis.dockerfile
    hostname: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - php
    ports:
      - 6379:6379
    networks:
      - office

networks:
  office:
    driver: bridge

